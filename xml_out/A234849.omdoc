<?xml version='1.0' encoding='UTF-8'?>
<omdoc xml:id="A234849.omdoc" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:omdoc="http://omdoc.org/ns" xmlns="http://omdoc.org/ns">
        <!--This OMDoc file is generated from an OEIS entry, do not edit-->
        <theory name="A234849">
          <assertion class="***** TTTT *****">
      <CMP></CMP>
    </assertion><omtext class="starts-with">
      <CMP> 1,15,19,24,29,41,368,833,1582,12996,30527,105072,412282,571364,</CMP>
    </omtext><assertion class="***** UUUU *****">
      <CMP> 615279,641180,1213387,1635523,2603393,3505632,4289930,14230877,</CMP>
    </assertion><assertion class="***** IIII *****">
      <CMP> 19306296,22032773,79279388,94146647,147017418,149333691,455566242,535859188,1429801665</CMP>
    </assertion><omtext class="name">
      <CMP> Positions of records in iterated MD5 applied to empty string</CMP>
    </omtext><omtext class="comment">
      <CMP> The MD5 message digest algorithm converts a string into a 128-bit number represented as a 32-digit lowercase hexadecimal string. Consider iterating this function starting with the empty string, MD5(&quot;&quot;) = d41d8cd98f00b204e9800998ecf8427e, MD5^{(2)}(&quot;&quot;) = MD5(&quot;d41d8cd98f00b204e9800998ecf8427e&quot;) = 74be16979710d4c4e7c6647856088456.</CMP>
    </omtext><omtext class="comment">
      <CMP> The sequence gives the iteration numbers where a record value is achieved.</CMP>
    </omtext><omtext class="comment">
      <CMP> Because each iteration produces a 128-bit number, the sequence must be finite, although it is unknown what the maximum value attained by the above iteration is.</CMP>
    </omtext><omtext class="link">
      <CMP> Sean A. Irvine, &lt;a href=&quot;/A234849/b234849.txt&quot;&gt;Table of n, a(n) for n = 1..35&lt;/a&gt;</CMP>
    </omtext><omtext class="link">
      <CMP> Wikipedia, &lt;a href=&quot;http://en.wikipedia.org/wiki/MD5&quot;&gt;MD5&lt;/a&gt;</CMP>
    </omtext><assertion class="example">
      <CMP> a(2)=15 because MD5^{(15)}(&quot;&quot;)=d4f6f4e928303d5361d83531beb5260f is larger than MD^{(n)}(&quot;&quot;) for all n&lt;15.</CMP>
    </assertion><assertion class="example">
      <CMP> a(28)=149333691 because MD5^{(149333691)}(&quot;&quot;)=fffffff5fedfdd0975cc5bbd15245b22 is larger than all preceding values.</CMP>
    </assertion><omtext class="program">
      <CMP> #!/bin/bash</CMP>
    </omtext><omtext class="program">
      <CMP> function md5() {</CMP>
    </omtext><omtext class="program">
      <CMP>     echo -n &quot;$1&quot; | md5sum - | gawk '{print $1}'</CMP>
    </omtext><omtext class="program">
      <CMP> }</CMP>
    </omtext><omtext class="program">
      <CMP> it=0</CMP>
    </omtext><omtext class="program">
      <CMP> while :; do</CMP>
    </omtext><omtext class="program">
      <CMP>     it=$[$it+1]</CMP>
    </omtext><omtext class="program">
      <CMP>     prev=$(md5 &quot;$prev&quot;)</CMP>
    </omtext><omtext class="program">
      <CMP>     if [ &quot;$prev&quot; == &quot;$best&quot; ]; then</CMP>
    </omtext><omtext class="program">
      <CMP>         echo &quot;Cycle detected&quot;</CMP>
    </omtext><omtext class="program">
      <CMP>         exit</CMP>
    </omtext><omtext class="program">
      <CMP>     elif [ &quot;$prev&quot; \&gt; &quot;$best&quot; ]; then</CMP>
    </omtext><omtext class="program">
      <CMP>         best=$prev</CMP>
    </omtext><omtext class="program">
      <CMP>         echo $it $prev</CMP>
    </omtext><omtext class="program">
      <CMP>     fi</CMP>
    </omtext><omtext class="program">
      <CMP> done</CMP>
    </omtext><assertion class="keywords">
      <CMP> nonn,fini,nice</CMP>
    </assertion><assertion class="offset">
      <CMP> 1,2</CMP>
    </assertion><assertion class="author">
      <CMP> _Sean A. Irvine_, Dec 31 2013</CMP>
    </assertion>
        </theory>
      </omdoc>