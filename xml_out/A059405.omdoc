<?xml version='1.0' encoding='UTF-8'?>
<omdoc xml:id="A059405.omdoc" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:omdoc="http://omdoc.org/ns" xmlns="http://omdoc.org/ns">
        <!--This OMDoc file is generated from an OEIS entry, do not edit-->
        <theory name="A059405">
          <assertion class="***** TTTT *****">
      <CMP></CMP>
    </assertion><omtext class="starts-with">
      <CMP> 1,2,3,4,5,6,7,8,9,128,135,175,384,432,672,735,1296,1715,6144,6912,</CMP>
    </omtext><assertion class="***** UUUU *****">
      <CMP> 13824,18432,23328,34992,82944,93312,131712,248832,442368,1492992,</CMP>
    </assertion><assertion class="***** IIII *****">
      <CMP> 2239488,2333772,2612736,3981312,4128768,4741632,9289728,12192768</CMP>
    </assertion><omtext class="name">
      <CMP> Numbers which are the product of their digits raised to positive integer powers.</CMP>
    </omtext><omtext class="link">
      <CMP> Reinhard Zumkeller, &lt;a href=&quot;/A059405/b059405.txt&quot;&gt;Table of n, a(n) for n = 1..120&lt;/a&gt;</CMP>
    </omtext><assertion class="example">
      <CMP> a(17) = 1296 = (1)(2^2)(9)(6^2);</CMP>
    </assertion><assertion class="example">
      <CMP> a(32) = 2333772 = (2)(3)(3)(3^3)(7)(7^3)(2).</CMP>
    </assertion><omtext class="program">
      <CMP> (Haskell)</CMP>
    </omtext><omtext class="program">
      <CMP> a059405 n = a059405_list !! (n-1)</CMP>
    </omtext><omtext class="program">
      <CMP> a059405_list = filter f a238985_list where</CMP>
    </omtext><omtext class="program">
      <CMP>    f x = all (== 0) (map (mod x) digs) &amp;&amp; g x digs where</CMP>
    </omtext><omtext class="program">
      <CMP>          g z []         = z == 1</CMP>
    </omtext><omtext class="program">
      <CMP>          g z ds'@(d:ds) = r == 0 &amp;&amp; (h z' ds' || g z' ds)</CMP>
    </omtext><omtext class="program">
      <CMP>                           where (z', r) = divMod z d</CMP>
    </omtext><omtext class="program">
      <CMP>          h z []         = z == 1</CMP>
    </omtext><omtext class="program">
      <CMP>          h z ds'@(d:ds) = r == 0 &amp;&amp; h z' ds' || g z ds</CMP>
    </omtext><omtext class="program">
      <CMP>                           where (z', r) = divMod z d</CMP>
    </omtext><omtext class="program">
      <CMP>          digs = map (read . return) $ filter (/= '1') $ show x</CMP>
    </omtext><omtext class="program">
      <CMP> -- _Reinhard Zumkeller_, Apr 29 2015</CMP>
    </omtext><assertion class="crossref">
      <CMP> Subsequence of A238985.</CMP>
    </assertion><assertion class="keywords">
      <CMP> base,nice,nonn</CMP>
    </assertion><assertion class="offset">
      <CMP> 1,2</CMP>
    </assertion><assertion class="author">
      <CMP> _Erich Friedman_, Jan 29 2001</CMP>
    </assertion><assertion class="extensions">
      <CMP> More terms from _Erich Friedman_, Apr 01 2003</CMP>
    </assertion><assertion class="extensions">
      <CMP> Offset changed by _Reinhard Zumkeller_, Apr 29 2015</CMP>
    </assertion>
        </theory>
      </omdoc>