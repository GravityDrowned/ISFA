<?xml version='1.0' encoding='UTF-8'?>
<omdoc xml:id="A218980.omdoc" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:omdoc="http://omdoc.org/ns" xmlns="http://omdoc.org/ns">
        <!--This OMDoc file is generated from an OEIS entry, do not edit-->
        <theory name="A218980">
          <assertion class="***** TTTT *****">
      <CMP></CMP>
    </assertion><omtext class="starts-with">
      <CMP> 1,2,3,4,6,8,9,11,12,17,18,22,23,24,29,30,36,37,41,47,48,53,59,60,67,</CMP>
    </omtext><assertion class="***** UUUU *****">
      <CMP> 71,72,79,83,89,97,101,107,113,120,127,131,137,144,149,157,163,167,</CMP>
    </assertion><assertion class="***** IIII *****">
      <CMP> 173,179,180,191,197,210,211,223,227,233,239,240,251,257,263,269,277</CMP>
    </assertion><omtext class="name">
      <CMP> Integers not in A218852.</CMP>
    </omtext><omtext class="comment">
      <CMP> Conjecture: This sequence is infinite.</CMP>
    </omtext><omtext class="program">
      <CMP> (JavaScript)</CMP>
    </omtext><omtext class="program">
      <CMP> function divisorSum(n) {</CMP>
    </omtext><omtext class="program">
      <CMP> c=0;</CMP>
    </omtext><omtext class="program">
      <CMP> for (i=1;i&lt;=n;i++) if (n%i==0) c+=i;</CMP>
    </omtext><omtext class="program">
      <CMP> return c;</CMP>
    </omtext><omtext class="program">
      <CMP> }</CMP>
    </omtext><omtext class="program">
      <CMP> ds=new Array();</CMP>
    </omtext><omtext class="program">
      <CMP> for (j=1;j&lt;1001;j++) ds[j]=divisorSum(j);</CMP>
    </omtext><omtext class="program">
      <CMP> a=new Array();</CMP>
    </omtext><omtext class="program">
      <CMP> ac=0;</CMP>
    </omtext><omtext class="program">
      <CMP> for (j=1;j&lt;300;j++)</CMP>
    </omtext><omtext class="program">
      <CMP> for (k=1;k&lt;=j;k++)</CMP>
    </omtext><omtext class="program">
      <CMP> for (m=1;m&lt;=k;m++)</CMP>
    </omtext><omtext class="program">
      <CMP> if (ds[j]+ds[k]+ds[m]==ds[j+k+m]) a[ac++]=j+k+m;</CMP>
    </omtext><omtext class="program">
      <CMP> a.sort(function(a, b) {return a-b;});</CMP>
    </omtext><omtext class="program">
      <CMP> i=0;</CMP>
    </omtext><omtext class="program">
      <CMP> while(i++&lt;a.length-1)</CMP>
    </omtext><omtext class="program">
      <CMP> if (a[i]==a[i+1]) a.splice(i--,1);</CMP>
    </omtext><omtext class="program">
      <CMP> document.writeln(a);</CMP>
    </omtext><omtext class="program">
      <CMP> b=new Array();</CMP>
    </omtext><omtext class="program">
      <CMP> ac=0;</CMP>
    </omtext><omtext class="program">
      <CMP> bc=0;</CMP>
    </omtext><omtext class="program">
      <CMP> for (i=0;i&lt;a[a.length-1];i++) if (a[ac]!=i) b[bc++]=i; else ac++;</CMP>
    </omtext><omtext class="program">
      <CMP> document.writeln(b);</CMP>
    </omtext><assertion class="crossref">
      <CMP> Cf. A218852.</CMP>
    </assertion><assertion class="keywords">
      <CMP> nonn</CMP>
    </assertion><assertion class="offset">
      <CMP> 1,2</CMP>
    </assertion><assertion class="author">
      <CMP> _Jon Perry_, Nov 08 2012</CMP>
    </assertion>
        </theory>
      </omdoc>