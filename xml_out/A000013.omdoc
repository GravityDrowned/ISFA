<?xml version='1.0' encoding='UTF-8'?>
<omdoc xml:id="A000013.omdoc" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:omdoc="http://omdoc.org/ns" xmlns="http://omdoc.org/ns">
        <!--This OMDoc file is generated from an OEIS entry, do not edit-->
        <theory name="A000013">
          <assertion class="***** TTTT *****">
      <CMP> M0313 N0115</CMP>
    </assertion><omtext class="starts-with">
      <CMP> 1,1,2,2,4,4,8,10,20,30,56,94,180,316,596,1096,2068,3856,7316,13798,</CMP>
    </omtext><assertion class="***** UUUU *****">
      <CMP> 26272,49940,95420,182362,349716,671092,1290872,2485534,4794088,</CMP>
    </assertion><assertion class="***** IIII *****">
      <CMP> 9256396,17896832,34636834,67110932,130150588,252648992,490853416</CMP>
    </assertion><omtext class="name">
      <CMP> Definition (1): Number of n-bead binary necklaces with beads of 2 colors where the colors may be swapped but turning over is not allowed.</CMP>
    </omtext><omtext class="comment">
      <CMP> Definition (2): Equivalently, number of different output sequences from an n-stage pure cycling shift register when 2 sequences are considered the same if one is the complement of the other.</CMP>
    </omtext><omtext class="comment">
      <CMP> Definition (3): Also number of different output sequences from an n-stage pure cycling shift register constrained so contents have even weight.</CMP>
    </omtext><omtext class="comment">
      <CMP> Definition (4): Also number of output sequences from (n-1)-stage shift register which feeds back the mod 2 sum of the contents of the register.</CMP>
    </omtext><omtext class="comment">
      <CMP> The equivalence of definitions (1) and (2) follows at once from the definitions.</CMP>
    </omtext><omtext class="comment">
      <CMP> If u is an output sequence of type (2) then its derivative is of type (3) - so (2) and (3) count the same things.</CMP>
    </omtext><omtext class="comment">
      <CMP> If we have a shift register of type (4), append a new cell which contains the mod 2 sum of the contents to get a shift register of type (3). So (3) and (4) count the same things.</CMP>
    </omtext><omtext class="comment">
      <CMP> If n is even, a(n) = A000116(n/2). If 2^(n+1)-1 is prime, then a(n) = A128976(n+1), the number of cycles in the digraph of the Lucas-Lehmer operator LL(x)=x^2-2 acting on Z/(2^(n+1)-1). - _M. F. Hasler_, May 19 2007</CMP>
    </omtext><omtext class="reference">
      <CMP> N. J. Fine, Classes of periodic sequences, Illinois J. Math., 2 (1958), 285-302.</CMP>
    </omtext><omtext class="reference">
      <CMP> E. N. Gilbert and J. Riordan, Symmetry types of periodic sequences, Illinois J. Math., 5 (1961), 657-665.</CMP>
    </omtext><omtext class="reference">
      <CMP> S. W. Golomb, Shift-Register Sequences, Holden-Day, San Francisco, 1967, p. 172.</CMP>
    </omtext><omtext class="reference">
      <CMP> Karyn McLellan, Periodic coefficients and random Fibonacci sequences, Electronic Journal of Combinatorics, 20(4), 2013, #P32.</CMP>
    </omtext><omtext class="reference">
      <CMP> N. J. A. Sloane, A Handbook of Integer Sequences, Academic Press, 1973 (includes this sequence).</CMP>
    </omtext><omtext class="reference">
      <CMP> N. J. A. Sloane, On single-deletion-correcting codes, in Codes and Designs (Columbus, OH, 2000), 273-291, Ohio State Univ. Math. Res. Inst. Publ., 10, de Gruyter, Berlin, 2002.</CMP>
    </omtext><omtext class="reference">
      <CMP> N. J. A. Sloane and Simon Plouffe, The Encyclopedia of Integer Sequences, Academic Press, 1995 (includes this sequence).</CMP>
    </omtext><omtext class="link">
      <CMP> T. D. Noe, &lt;a href=&quot;/A000013/b000013.txt&quot;&gt;Table of n, a(n) for n = 0..200&lt;/a&gt;</CMP>
    </omtext><omtext class="link">
      <CMP> Joerg Arndt, &lt;a href=&quot;http://www.jjj.de/fxt/#fxtbook&quot;&gt;Matters Computational (The Fxtbook)&lt;/a&gt;, p.151, p.408</CMP>
    </omtext><omtext class="link">
      <CMP> H. Bottomley, &lt;a href=&quot;/A000011/a000011_a000013.gif&quot;&gt;Initial terms of A000011 and A000013&lt;/a&gt;</CMP>
    </omtext><omtext class="link">
      <CMP> F. Ruskey, &lt;a href=&quot;http://www.theory.cs.uvic.ca/~cos/inf/neck/NecklaceInfo.html&quot;&gt;Necklaces, Lyndon words, De Bruijn sequences, etc.&lt;/a&gt;</CMP>
    </omtext><omtext class="link">
      <CMP> N. J. A. Sloane, &lt;a href=&quot;http://neilsloane.com/doc/dijen.txt&quot;&gt;On single-deletion-correcting codes&lt;/a&gt;</CMP>
    </omtext><omtext class="link">
      <CMP> N. J. A. Sloane, &lt;a href=&quot;/A000013/a000013.txt&quot;&gt;Maple code for this and related sequences&lt;/a&gt;</CMP>
    </omtext><omtext class="link">
      <CMP> &lt;a href=&quot;/index/Ne#necklaces&quot;&gt;Index entries for sequences related to necklaces&lt;/a&gt;</CMP>
    </omtext><omdoc:p class="formula">
        <CMP>
        <OMOBJ>
      <OMA>
      <OMS name="Sum_" cd="A000013"/>
      <OMV name="d"/>
    </OMA>
    </OMOBJ> divides n } (phi(2d)*2^(n/d))/(2n) for<OMOBJ>
      <OMA>
      <OMS name="&gt;" cd="arithmetic"/>
      <OMV name="n"/>
      <OMI>0</OMI>
    </OMA>
    </OMOBJ>. - _Michael Somos_, Oct 20 1999
      </CMP>
      </omdoc:p><assertion class="example">
      <CMP> G.f. = 1 + x + 2*x^2 + 2*x^3 + 4*x^4 + 4*x^5 + 8*x^6 + 10*x^7 + 20*x^8 + ...</CMP>
    </assertion><omtext class="maple">
      <CMP> with(numtheory): A000013 := proc(n) local s,d; if n = 0 then RETURN(1) else s := 0; for d in divisors(n) do s := s+(phi(2*d)*2^(n/d))/(2*n); od; RETURN(s); fi; end;</CMP>
    </omtext><omtext class="mathematica">
      <CMP> a[n_] := Fold[ #1 + EulerPhi[2#2]2^(n/#2)/(2n) &amp;, 0, Divisors[n]]</CMP>
    </omtext><omtext class="mathematica">
      <CMP> a[ n_] := If[ n &lt; 1, Boole[n == 0], DivisorSum[ n, EulerPhi[2 #] 2^(n/#) &amp;] / (2 n)]; (* _Michael Somos_, Dec 19 2014 *)</CMP>
    </omtext><omtext class="program">
      <CMP> (PARI) {a(n) = if( n&lt;1, n==0, sumdiv(n, k, eulerphi(2*k) * 2^(n/k)) / (2*n))}; /* _Michael Somos_, Oct 20 1999 */</CMP>
    </omtext><omtext class="program">
      <CMP> (Haskell)</CMP>
    </omtext><omtext class="program">
      <CMP> a000013 0 = 1</CMP>
    </omtext><omtext class="program">
      <CMP> a000013 n = sum (zipWith (*)</CMP>
    </omtext><omtext class="program">
      <CMP>    (map (a000010 . (* 2)) ds) (map (2 ^) $ reverse ds)) `div` (2 * n)</CMP>
    </omtext><omtext class="program">
      <CMP>    where ds = a027750_row n</CMP>
    </omtext><omtext class="program">
      <CMP> -- _Reinhard Zumkeller_, Jul 08 2013</CMP>
    </omtext><assertion class="crossref">
      <CMP> Cf. A000031, A000016, A000116.</CMP>
    </assertion><assertion class="crossref">
      <CMP> Cf. A128976.</CMP>
    </assertion><assertion class="crossref">
      <CMP> Cf. A000010, A027750.</CMP>
    </assertion><assertion class="keywords">
      <CMP> nonn,nice,easy,changed</CMP>
    </assertion><assertion class="offset">
      <CMP> 0,3</CMP>
    </assertion><assertion class="author">
      <CMP> _N. J. A. Sloane_</CMP>
    </assertion>
        </theory>
      </omdoc>