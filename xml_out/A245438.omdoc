<?xml version='1.0' encoding='UTF-8'?>
<omdoc xml:id="A245438.omdoc" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:omdoc="http://omdoc.org/ns" xmlns="http://omdoc.org/ns">
        <!--This OMDoc file is generated from an OEIS entry, do not edit-->
        <theory name="A245438">
          <assertion class="***** TTTT *****">
      <CMP></CMP>
    </assertion><omtext class="starts-with">
      <CMP> 1,1,2,2,3,4,5,6,8,17,53,158,450,1224,3195,8036,19585,46549,108541,</CMP>
    </omtext><assertion class="***** UUUU *****">
      <CMP> 219677,664149,1891075,5091680</CMP>
    </assertion><omtext class="name">
      <CMP> Let a(n) = the number of ways in which n is equal to the sum of digits &gt; 0 taken from numbers &lt;= n.</CMP>
    </omtext><omtext class="comment">
      <CMP> Let the range (1,n) in base 10 be represented in the form (1.A,n.A) = (1.A, 2.A, 3.A...n.A), where digit A = 10 in bases &gt;= 11. Let samplesum(d(i),i=1..n) sum single digits d(i) sampled from each member of (1.A,n.A). The list above is the number of ways in which n = samplesum(d(i),i=1..n) when 0 &lt; d(i) &lt; A, for all i. Because d(i) is not permitted to equal 0, sums like these are not counted separately:</CMP>
    </omtext><omtext class="comment">
      <CMP> 10 = 1 + 2 + 3 + 4.</CMP>
    </omtext><omtext class="comment">
      <CMP> 10 = 1 + 2 + 3 + 4 + 0 (of 10).</CMP>
    </omtext><omtext class="comment">
      <CMP> 11 = 1 + 2 + 3 + 4 + 0 (of 10) + 1 (of 11).</CMP>
    </omtext><omtext class="comment">
      <CMP> 11 = 1 + 2 + 3 + 4 + 1 (of 11).</CMP>
    </omtext><omtext class="comment">
      <CMP> 12 = 1 + 2 + 3 + 6.</CMP>
    </omtext><omtext class="comment">
      <CMP> 12 = 1 + 2 + 3 + 6 + 0 (of 10).</CMP>
    </omtext><omtext class="comment">
      <CMP> However, these two sums are counted separately:</CMP>
    </omtext><omtext class="comment">
      <CMP> 11 = 1 + 2 + 3 + 4 + 1 (first digit of 11).</CMP>
    </omtext><omtext class="comment">
      <CMP> 11 = 1 + 2 + 3 + 4 + 1 (second digit of 11).</CMP>
    </omtext><assertion class="example">
      <CMP> 1 = 1 (sum=1).</CMP>
    </assertion><assertion class="example">
      <CMP> 2 = 2 (s=1).</CMP>
    </assertion><assertion class="example">
      <CMP> 3 = 1 + 2; 3 (s=2).</CMP>
    </assertion><assertion class="example">
      <CMP> 4 = 1 + 3; 4 (s=2).</CMP>
    </assertion><assertion class="example">
      <CMP> 5 = 2 + 3; 1 + 4; 5 (s=3).</CMP>
    </assertion><assertion class="example">
      <CMP> 6 = 1 + 2 + 3; 2 + 4; 1 + 5; 6 (s=4).</CMP>
    </assertion><assertion class="example">
      <CMP> 7 = 1 + 2 + 4; 3 + 4; 2 + 5; 1 + 6; 7 (s=5).</CMP>
    </assertion><assertion class="example">
      <CMP> 8 = 1 + 3 + 4; 1 + 2 + 5; 3 + 5; 2 + 6; 1 + 7; 8 (s=6).</CMP>
    </assertion><assertion class="example">
      <CMP> 9 = 2 + 3 + 4; 1 + 3 + 5; 4 + 5; 1 + 2 + 6; 3 + 6; 2 + 7; 1 + 8; 9 (s=8).</CMP>
    </assertion><assertion class="example">
      <CMP> 10 = 1 + 2 + 3 + 4; 2 + 3 + 5; 1 + 4 + 5; 1 + 3 + 6; 4 + 6; 1 + 2 + 7; 3 + 7; 2 + 8; 1 + 9; 2 + 3 + 4 + 1 (of 10); 1 + 3 + 5 + 1 (of 10); 4 + 5 + 1 (of 10); 1 + 2 + 6 + 1 (of 10); 3 + 6 + 1 (of 10); 2 + 7 + 1 (of 10); 1 + 8 + 1 (of 10); 9 + 1 (of 10) (s=17).</CMP>
    </assertion><assertion class="example">
      <CMP> 11 = 3 + 4 + 5 + 1 (of 10).</CMP>
    </assertion><assertion class="example">
      <CMP> 12 = 1 + 2 + 5 + 1 (of 10) + 1 (of 11) + 2 (of 12).</CMP>
    </assertion><assertion class="example">
      <CMP> 13 = 1 + 2 + 6 + 1 (of 11) + 2 (of 12).</CMP>
    </assertion><assertion class="example">
      <CMP> 14 = 3 + 4 + 1 (of 10) + 1 (of 11) + 2 (of 12) + 3 (of 13).</CMP>
    </assertion><assertion class="example">
      <CMP> 15 = 3 + 5 + 1 (of 10) + 2 (of 12) + 3 (of 13) + 1 (of 14).</CMP>
    </assertion><omtext class="program">
      <CMP> (PARI) /* To include 0 in sums, change &quot;dn[i]&gt;0&quot; to &quot;dn[i]&gt;=0&quot; */</CMP>
    </omtext><omtext class="program">
      <CMP> { nmx=20; b=10; d = vector(nmx+1); s = vector(nmx+1); for(n=1,nmx+1, dn=digits(n,b); nn=0; for(i=1,#dn,if(dn[i]&gt;0,nn=nn*b+dn[i])); d[n]=nn; ); for(n=1,nmx, si=1; c=0; until(si&gt;n, nn=0; for(i=1,si,if(s[i]&gt;0,nn+=(d[i]\b^(s[i]-1))%b);if(nn&gt;n,i=si)); if(nn==n,c++); incs(); ); s[si]=0; print1(c,&quot;, &quot;)); break; }</CMP>
    </omtext><omtext class="program">
      <CMP> {incs() = s[1]++; i=1; while(d[i]\b^(s[i]-1)==0, s[i]=0; i++; s[i]++; ); if(i&gt;si,si=i); } \\ _Anthony Sand_, Aug 15 2014</CMP>
    </omtext><assertion class="crossref">
      <CMP> Cf. A241754, A245439.</CMP>
    </assertion><assertion class="keywords">
      <CMP> nonn,base,more</CMP>
    </assertion><assertion class="offset">
      <CMP> 1,3</CMP>
    </assertion><assertion class="author">
      <CMP> _Anthony Sand_, Jul 22 2014</CMP>
    </assertion>
        </theory>
      </omdoc>