<?xml version='1.0' encoding='UTF-8'?>
<omdoc xml:id="A221561.omdoc" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:omdoc="http://omdoc.org/ns" xmlns="http://omdoc.org/ns">
        <!--This OMDoc file is generated from an OEIS entry, do not edit-->
        <theory name="A221561">
          <assertion class="***** TTTT *****">
      <CMP></CMP>
    </assertion><omtext class="starts-with">
      <CMP> 15039276,16323925,14283486,7150092,68089,8584138,4918023,11368221,</CMP>
    </omtext><assertion class="***** UUUU *****">
      <CMP> 8644539,8342712,3458016,6733135,8443170,1196392,3446939,449678,</CMP>
    </assertion><assertion class="***** IIII *****">
      <CMP> 5065508,4516318,9837863,7025236,16004084,14417659,2735901,15059233,15707865,11839529,7081334,4448725</CMP>
    </assertion><omtext class="name">
      <CMP> Consecutive values produced by the C++ ranlux24 random number generator with the default seed (19780503).</CMP>
    </omtext><omtext class="comment">
      <CMP> The ranlux24 generator takes the first 23 values from each block of 223 values of ranlux24_base (A221559).</CMP>
    </omtext><omtext class="link">
      <CMP> Eric M. Schmidt, &lt;a href=&quot;/A221561/b221561.txt&quot;&gt;Table of n, a(n) for n = 1..1000&lt;/a&gt;</CMP>
    </omtext><omtext class="link">
      <CMP> M. Luescher, &lt;a href=&quot;http://arxiv.org/abs/hep-lat/9309020&quot;&gt; A portable high-quality random number generator for lattice field theory calculations&lt;/a&gt;, arXiv.</CMP>
    </omtext><omtext class="program">
      <CMP> (C++)</CMP>
    </omtext><omtext class="program">
      <CMP> #include &lt;iostream&gt;</CMP>
    </omtext><omtext class="program">
      <CMP> #include &lt;random&gt;</CMP>
    </omtext><omtext class="program">
      <CMP> void A221561(int max)</CMP>
    </omtext><omtext class="program">
      <CMP> {</CMP>
    </omtext><omtext class="program">
      <CMP>   std::ranlux24 gen;</CMP>
    </omtext><omtext class="program">
      <CMP>   for (int i = 1; i &lt;= max; ++i)</CMP>
    </omtext><omtext class="program">
      <CMP>     std::cout &lt;&lt; i &lt;&lt; ' ' &lt;&lt; gen() &lt;&lt; '\n';</CMP>
    </omtext><omtext class="program">
      <CMP> }</CMP>
    </omtext><assertion class="crossref">
      <CMP> Cf. A221559, A221560, A221562.</CMP>
    </assertion><assertion class="keywords">
      <CMP> nonn</CMP>
    </assertion><assertion class="offset">
      <CMP> 1,1</CMP>
    </assertion><assertion class="author">
      <CMP> _Eric M. Schmidt_, Jan 20 2013</CMP>
    </assertion>
        </theory>
      </omdoc>