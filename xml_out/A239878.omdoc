<?xml version='1.0' encoding='UTF-8'?>
<omdoc xml:id="A239878.omdoc" xmlns:html="http://www.w3.org/1999/xhtml" xmlns:omdoc="http://omdoc.org/ns" xmlns="http://omdoc.org/ns">
        <!--This OMDoc file is generated from an OEIS entry, do not edit-->
        <theory name="A239878">
          <assertion class="***** TTTT *****">
      <CMP></CMP>
    </assertion><omtext class="starts-with">
      <CMP> 0,18,27,36,45,72,81,108,153,198,216,225,243,252,270,297,306,342,369,</CMP>
    </omtext><assertion class="***** UUUU *****">
      <CMP> 396,423,441,450,477,486,495,504,513,522,549,558,576,603,630,639,657,</CMP>
    </assertion><assertion class="***** IIII *****">
      <CMP> 693,702,729,747,756,783,801,846,891,918,954,963,972,981</CMP>
    </assertion><omtext class="name">
      <CMP> Numbers n with digit_sum(n*n) + 1 = digit_sum((n+1)*(n+1)).</CMP>
    </omtext><omtext class="comment">
      <CMP> All terms are divisible by 9.</CMP>
    </omtext><omtext class="comment">
      <CMP> The number of terms is unlimited: n = 3*10^z + 6, i.e., digit_sum(n*n) + 1 = 27 + 1 = 28 = digit_sum((n+1)*(n+1)). - _Reiner Moewald_, Apr 20 2014</CMP>
    </omtext><omtext class="link">
      <CMP> Reiner Moewald, &lt;a href=&quot;/A239878/b239878.txt&quot;&gt;Table of n, a(n) for n = 1..4067&lt;/a&gt;</CMP>
    </omtext><omdoc:p class="formula">
        <CMP>
      <OMOBJ>
        <OMA>
      <OMS name="=" cd="arithmetic"/>
      <OMA>
      <OMR xref="A240752"/>
      <OMA>
      <OMS name="a" cd="A239878"/>
      <OMV name="n"/>
    </OMA>
    </OMA>
      <OMI>1</OMI>
    </OMA>
      </OMOBJ>.-_Reinhard Zumkeller_ ,Apr 12 2014 
    </CMP>
    </omdoc:p><omtext class="program">
      <CMP> (Python)</CMP>
    </omtext><omtext class="program">
      <CMP> def digit_Sum(n):</CMP>
    </omtext><omtext class="program">
      <CMP> ...integerString = str(n)</CMP>
    </omtext><omtext class="program">
      <CMP> ...digit_Sum=0</CMP>
    </omtext><omtext class="program">
      <CMP> ...for digitLetter in integerString:</CMP>
    </omtext><omtext class="program">
      <CMP> ......digit_Sum = digit_Sum + int(digitLetter)</CMP>
    </omtext><omtext class="program">
      <CMP> ...return digit_Sum</CMP>
    </omtext><omtext class="program">
      <CMP> count = 0;</CMP>
    </omtext><omtext class="program">
      <CMP> for i in range(20000):</CMP>
    </omtext><omtext class="program">
      <CMP> ...if(digit_Sum(i*i) + 1 == digit_Sum((i+1)*(i+1))):</CMP>
    </omtext><omtext class="program">
      <CMP> ......count = count +1</CMP>
    </omtext><omtext class="program">
      <CMP> ......print(anz,&quot;   &quot;,i);</CMP>
    </omtext><omtext class="program">
      <CMP> (PARI) isok(n) = (sumdigits(n^2) + 1) == sumdigits((n+1)^2); \\ _Michel Marcus_, Apr 06 2014</CMP>
    </omtext><omtext class="program">
      <CMP> (Haskell)</CMP>
    </omtext><omtext class="program">
      <CMP> import Data.List (elemIndices)</CMP>
    </omtext><omtext class="program">
      <CMP> a239878 n = a239878_list !! (n-1)</CMP>
    </omtext><omtext class="program">
      <CMP> a239878_list = elemIndices 1 a240752_list</CMP>
    </omtext><omtext class="program">
      <CMP> -- _Reinhard Zumkeller_, Apr 12 2014</CMP>
    </omtext><assertion class="crossref">
      <CMP> Cf. A202089, A240752, A240754, A004159, A007953, A000290.</CMP>
    </assertion><assertion class="keywords">
      <CMP> nonn,base</CMP>
    </assertion><assertion class="offset">
      <CMP> 1,2</CMP>
    </assertion><assertion class="author">
      <CMP> _Reiner Moewald_, Mar 28 2014</CMP>
    </assertion>
        </theory>
      </omdoc>